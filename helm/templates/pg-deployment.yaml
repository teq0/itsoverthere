{{- $svcName := .Values.serviceName -}}
{{- $svcPort := .Values.service.port -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: pg-secrets
  namespace: {{ $svcName }}
type: Opaque
stringData:
{{ .Files.Get "dbcreds.secret.yaml" | indent 1 }}
---
apiVersion: v1
kind: Service
metadata:
  name: pg-{{ $svcName }}
  namespace: {{ $svcName }}
  labels:
    app: {{ $svcName }}
spec:
  ports:
    - port: 3306
  selector:
    app: {{ $svcName }}
    tier: database
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-pvc-{{ $svcName }}
  namespace: {{ $svcName }}
  labels:
    app: {{ $svcName }}
spec:
  storageClassName: {{ .Values.storageClass }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-{{ $svcName }}
  namespace: {{ $svcName }}
  labels:
    app: {{ $svcName }}
spec:
  selector:
    matchLabels:
      app: {{ $svcName }}
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ $svcName }}
        tier: database
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      {{- if .Values.nodeSelectors }}
      nodeSelector:
        {{- range $key, $val := .Values.nodeSelectors }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
      {{- end }}
      containers:
      - image: postgres:16.3-alpine3.20
        name: pg
        env:
        - name: POSTGRES_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-secrets
              key: rootPassword
        - name: POSTGRES_DB
          value: itsoverthere
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pg-secrets
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-secrets
              key: password
        - name: PGDATA
          value: /var/lib/postgres/data/pgdata
        ports:
        - containerPort: 5432
          name: pg-{{ $svcName }}
        volumeMounts:
        - name: postgres-persistent-storage
          mountPath: /var/lib/postgres/data/pgdata
      volumes:
      - name: postgres-persistent-storage
        persistentVolumeClaim:
          claimName: pg-pvc-{{ $svcName }}
        